project_name: purplesec

# This is the directory in your NFS host where all data will actually be stored
# keep this in mind when you declare your volumes
export_dir: /srv/swarm/docker/volumes

# name of unprivileged user in the NFS host that accepts incoming SSH tunnels
ssh_tunneling_user: tunneler

# port number through which docker hosts locally see the remote NFS server after SSH tunnel has been established
# keep this in mind when you declare your volumes
ssh_tunneling_local_port: 12345

# this is where some pretty cool automations emerge
# you can set target group from inventory, compose stack name from ./docker and tell ansible if you want that particular compose stack to be present or not
# dir -> subdir of ./docker containing your app
# conf -> which compose files, relative to ./docker, you want to run for the stack
# env -> one env file to load, relative to ./docker
stacks:
  - { dir: nsm, target: 'networkHosts', status: present, conf: [docker-compose-ansible.yml, nsm/docker-compose-ansible.yml], env: nsm/.env, backup: no, swarm: no }
  - { dir: purpleids, target: 'analysisHosts', status: present, conf: [docker-compose-ansible.yml, purpleids/docker-compose-ansible.yml], env: purpleids/.env, backup: no, swarm: yes }
  - { dir: dvwa, target: 'analysisHosts', status: present, conf: [docker-compose-ansible.yml, dvwa/docker-compose-ansible.yml], env: dvwa/.env, backup: no, swarm: yes }
  - { dir: docker-bundles/services, target: 'storageHosts', conf: [docker-compose-ansible.yml, docker-bundles/services/docker-compose-ansible.yml], env: docker-bundles/services/.env, backup: no, swarm: yes }

requested_backups:
#  - { repo_password: "{{ vault_backup_password_0 }}", source_directories: ['/path/to/one', '/path/to/two'], target: 'dockerHosts' }
   - { repo_name: "swarm", repo_password: "{{ vault_backup_swarm_password }}", source_directories: ['/srv/swarm/to_backup', '/srv/swarm/docker/volumes'], target: 'storageServers' }
#   - { repo_name: "dipreistic", repo_password: "{{ vault_backup_dipreistic_password }}", source_directories: ['/home/zelevas/Games/dipre"], target: 'localHost' }
#  - { repo_password: "{{ vault_backup_password_0 }}", source_directories: ['

# This is a list of volumes you want the NFS host to expect
# Note that if you declare additional volumes in your compose stacks but do not instruct your NFS host here, the ssh+nfs magic won't work
